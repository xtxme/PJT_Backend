name: PJT

services:
  mysql:
    image: mysql:8.0
    container_name: PJT-mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_APP_USER}
      MYSQL_PASSWORD: ${MYSQL_APP_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"      # ขวาต้องเป็น 3306 เสมอภายในคอนเทนเนอร์
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - PJT-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: PJT-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # บังคับให้ backend ชี้ host เป็นชื่อ service "mysql"
      MYSQL_HOST: mysql
      # ให้แอปใช้พอร์ตนี้ (โค้ดอ่าน BACKEND_PORT อยู่แล้ว)
      BACKEND_PORT: ${BACKEND_PORT}
      NODE_ENV: ${NODE_ENV:-production}
      DEBUG: pf-backend
    ports:
      - "${BACKEND_PORT}:5002"   # ซ้าย = host, ขวา = container (ต้องเป็น 5002 ให้ตรง EXPOSE/CMD)
    networks:
      - PJT-net
    # volumes:                 # ตัดออกก่อน ถ้ายังไม่มีโฟลเดอร์ logs จริง
    #   - ./backend/logs:/app/logs

volumes:
  mysql-data:

networks:
  PJT-net:
    driver: bridge
